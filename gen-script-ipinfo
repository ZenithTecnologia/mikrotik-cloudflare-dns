#!/bin/bash

HOST=api.cloudflare.com

if [ -z "$TOKEN" ]
then
  echo TOKEN is not set. Cannot continue.
  exit 2
fi

function dns_ids_v4() {
  curl -s "https://$HOST/client/v4/zones/$ZONE_ID/dns_records" \
    -H "Accept: application/json" \
    -H "Authorization: Bearer $TOKEN" \
    | jq -r ".result[] | select(.name == (\"*.$DOMAIN\", \"$DOMAIN\") and .type == \"A\") | .id + \":\" + .name"
}

function dns_ids_v6() {
  curl -s "https://$HOST/client/v4/zones/$ZONE_ID/dns_records" \
    -H "Accept: application/json" \
    -H "Authorization: Bearer $TOKEN" \
    | jq -r ".result[] | select(.name == (\"*.$DOMAIN\", \"$DOMAIN\") and .type == \"AAAA\") | .id + \":\" + .name"
}

DNS_IDS_V4=`dns_ids_v4`
DNS_IDS_V6=`dns_ids_v6`

cat <<EOT
:global mcdPreviousIPv4
:local mcdCurrentIPv4

:local mcdCurrentIPv4 ([/tool fetch url="http://ipinfo.io/ip" mode=http as-value output=user]->"data")

EOT

cat <<EOT
:global mcdPreviousIPv6
:local mcdCurrentIPv6
:local mcdCurrentIPv6Unparsed

:local mcdCurrentIPv6 ([/tool fetch url="http://v6.ipinfo.io/ip" mode=http as-value output=user]->"data")

EOT

cat <<EOT
:if (\$mcdCurrentIPv4 != \$mcdPreviousIPv4) do={
  :log info "mcd: new IPv4 \$mcdCurrentIPv4 (was \$mcdPreviousIPv4)"
  :set mcdPreviousIPv4 \$mcdCurrentIPv4

EOT

for line in $DNS_IDS_V4
do
  id=${line%:*}
  name=${line#*:}

  cat <<EOT
  /tool fetch mode=https \\
    http-method=put \\
    url="https://$HOST/client/v4/zones/$ZONE_ID/dns_records/$id" \\
    http-header-field="content-type: application/json,Authorization: Bearer $TOKEN" \\
    http-data="{\"type\":\"A\",\"name\":\"$name\",\"content\":\"\$mcdCurrentIPv4\"}" \\
    output=none
EOT
done
cat <<EOT
}

EOT

cat <<EOT
:if (\$mcdCurrentIPv6 != \$mcdPreviousIPv6) do={
  :log info "mcd: new IPv6 \$mcdCurrentIPv6 (was \$mcdPreviousIPv6)"
  :set mcdPreviousIPv6 \$mcdCurrentIPv6
EOT

for line in $DNS_IDS_V6
do
  id=${line%:*}
  name=${line#*:}

  cat <<EOT
  /tool fetch mode=https \\
    http-method=put \\
    url="https://$HOST/client/v4/zones/$ZONE_ID/dns_records/$id" \\
    http-header-field="content-type: application/json,Authorization: Bearer $TOKEN" \\
    http-data="{\"type\":\"AAAA\",\"name\":\"$name\",\"content\":\"\$mcdCurrentIPv6\"}" \\
    output=none
EOT
done

cat <<EOT
}
EOT
